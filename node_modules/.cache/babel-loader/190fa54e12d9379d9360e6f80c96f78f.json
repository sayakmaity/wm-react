{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.timeIsBetween = exports.dateIsBetween = exports.dateHourIsBetween = void 0;\n\nvar _start_of_day = _interopRequireDefault(require(\"date-fns/start_of_day\"));\n\nvar _is_after = _interopRequireDefault(require(\"date-fns/is_after\"));\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n} // Helper function that uses date-fns methods to determine if a date is between two other dates\n\n\nconst dateHourIsBetween = (start, candidate, end) => (candidate.getTime() === start.getTime() || (0, _is_after.default)(candidate, start)) && (candidate.getTime() === end.getTime() || (0, _is_after.default)(end, candidate));\n\nexports.dateHourIsBetween = dateHourIsBetween;\n\nconst dateIsBetween = (start, candidate, end) => {\n  const startOfCandidate = (0, _start_of_day.default)(candidate);\n  const startOfStart = (0, _start_of_day.default)(start);\n  const startOfEnd = (0, _start_of_day.default)(end);\n  return (startOfCandidate.getTime() === startOfStart.getTime() || (0, _is_after.default)(startOfCandidate, startOfStart)) && (startOfCandidate.getTime() === startOfEnd.getTime() || (0, _is_after.default)(startOfEnd, startOfCandidate));\n};\n\nexports.dateIsBetween = dateIsBetween;\n\nconst timeIsBetween = (start, candidate, end) => {\n  const candidateTime = candidate.getHours() * 60 + candidate.getMinutes();\n  const startTime = start.getHours() * 60 + start.getMinutes();\n  const endTime = end.getHours() * 60 + end.getMinutes();\n  return candidateTime >= startTime && candidateTime <= endTime;\n};\n\nexports.timeIsBetween = timeIsBetween;","map":{"version":3,"mappings":";;;;;;;AAAA;;AACA;;;;;;EAEA;;;AACO,MAAMA,iBAAiB,GAAG,CAACC,KAAD,EAAcC,SAAd,EAA+BC,GAA/B,KAC/B,CAACD,SAAS,CAACE,OAAVF,OAAwBD,KAAK,CAACG,OAANH,EAAxBC,IAA2C,uBAAQA,SAAR,EAAmBD,KAAnB,CAA5C,MACCC,SAAS,CAACE,OAAVF,OAAwBC,GAAG,CAACC,OAAJD,EAAxBD,IAAyC,uBAAQC,GAAR,EAAaD,SAAb,CAD1C,CADK;;;;AAIA,MAAMG,aAAa,GAAG,CAACJ,KAAD,EAAcC,SAAd,EAA+BC,GAA/B,KAAsD;EACjF,MAAMG,gBAAgB,GAAG,2BAAWJ,SAAX,CAAzB;EACA,MAAMK,YAAY,GAAG,2BAAWN,KAAX,CAArB;EACA,MAAMO,UAAU,GAAG,2BAAWL,GAAX,CAAnB;EAEA,OACE,CAACG,gBAAgB,CAACF,OAAjBE,OAA+BC,YAAY,CAACH,OAAbG,EAA/BD,IAAyD,uBAAQA,gBAAR,EAA0BC,YAA1B,CAA1D,MACCD,gBAAgB,CAACF,OAAjBE,OAA+BE,UAAU,CAACJ,OAAXI,EAA/BF,IAAuD,uBAAQE,UAAR,EAAoBF,gBAApB,CADxD,CADF;AALK;;;;AAWA,MAAMG,aAAa,GAAG,CAACR,KAAD,EAAcC,SAAd,EAA+BC,GAA/B,KAAsD;EACjF,MAAMO,aAAa,GAAGR,SAAS,CAACS,QAAVT,KAAuB,EAAvBA,GAA4BA,SAAS,CAACU,UAAVV,EAAlD;EACA,MAAMW,SAAS,GAAGZ,KAAK,CAACU,QAANV,KAAmB,EAAnBA,GAAwBA,KAAK,CAACW,UAANX,EAA1C;EACA,MAAMa,OAAO,GAAGX,GAAG,CAACQ,QAAJR,KAAiB,EAAjBA,GAAsBA,GAAG,CAACS,UAAJT,EAAtC;EAEA,OAAOO,aAAa,IAAIG,SAAjBH,IAA8BA,aAAa,IAAII,OAAtD;AALK","names":["dateHourIsBetween","start","candidate","end","getTime","dateIsBetween","startOfCandidate","startOfStart","startOfEnd","timeIsBetween","candidateTime","getHours","getMinutes","startTime","endTime"],"sources":["/Users/sayakmaity/Desktop/CS279r/when2meet/node_modules/react-schedule-selector/src/lib/date-utils.ts"],"sourcesContent":["import startOfDay from 'date-fns/start_of_day'\nimport isAfter from 'date-fns/is_after'\n\n// Helper function that uses date-fns methods to determine if a date is between two other dates\nexport const dateHourIsBetween = (start: Date, candidate: Date, end: Date): boolean =>\n  (candidate.getTime() === start.getTime() || isAfter(candidate, start)) &&\n  (candidate.getTime() === end.getTime() || isAfter(end, candidate))\n\nexport const dateIsBetween = (start: Date, candidate: Date, end: Date): boolean => {\n  const startOfCandidate = startOfDay(candidate)\n  const startOfStart = startOfDay(start)\n  const startOfEnd = startOfDay(end)\n\n  return (\n    (startOfCandidate.getTime() === startOfStart.getTime() || isAfter(startOfCandidate, startOfStart)) &&\n    (startOfCandidate.getTime() === startOfEnd.getTime() || isAfter(startOfEnd, startOfCandidate))\n  )\n}\n\nexport const timeIsBetween = (start: Date, candidate: Date, end: Date): boolean => {\n  const candidateTime = candidate.getHours() * 60 + candidate.getMinutes()\n  const startTime = start.getHours() * 60 + start.getMinutes()\n  const endTime = end.getHours() * 60 + end.getMinutes()\n\n  return candidateTime >= startTime && candidateTime <= endTime\n}\n"]},"metadata":{},"sourceType":"script"}